"use strict";Object.defineProperty(exports, "__esModule", {value: true});var _edgeconfigfs = require('@vercel/edge-config-fs');var c={UNEXPECTED:"@vercel/edge-config: Unexpected error",UNAUTHORIZED:"@vercel/edge-config: Unauthorized",NETWORK:"@vercel/edge-config: Network error",EDGE_CONFIG_NOT_FOUND:"@vercel/edge-config: Edge Config not found"};function m(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function v(e,t){let i={};return t.forEach(s=>{i[s]=e[s]}),i}function u(e){if(typeof e!="string")throw new Error("@vercel/edge-config: Expected key to be a string")}function C(e){if(!Array.isArray(e)||e.some(t=>typeof t!="string"))throw new Error("@vercel/edge-config: Expected keys to be an array of string")}function h(e){return typeof structuredClone=="function"?structuredClone(e):e===void 0?e:JSON.parse(JSON.stringify(e))}function O(e){try{let t=new URL(e);if(t.host!=="edge-config.vercel.com"||t.protocol!=="https:"||!t.pathname.startsWith("/ecfg"))return null;let i=t.pathname.split("/")[1];if(!i)return null;let s=t.searchParams.get("token");return!s||s===""?null:{id:i,token:s}}catch (e2){return null}}var l=e=>e instanceof Error&&m(e,"digest")&&e.digest==="DYNAMIC_SERVER_USAGE";var y=new Map;async function p(e,t={}){let{headers:i=new Headers,...s}=t,d=i.get("Authorization"),r=`${e},${d||""}`,o=y.get(r);if(o){let{etag:P,response:U}=o,T=new Headers(i);T.set("If-None-Match",P);let g=await fetch(e,{...s,headers:T});if(g.status===304)return g.cachedResponseBody=JSON.parse(U),g;let N=g.headers.get("ETag");return g.ok&&N&&y.set(r,{etag:N,response:await g.clone().text()}),g}let n=await fetch(e,t),a=n.headers.get("ETag");return n.ok&&a&&y.set(r,{etag:a,response:await n.clone().text()}),n}async function E(e){if(e.type!=="vercel"||!process.env.AWS_LAMBDA_FUNCTION_NAME)return null;try{let t=await _edgeconfigfs.readFile.call(void 0, `/opt/edge-config/${e.id}.json`,"utf-8");return JSON.parse(t)}catch (e3){return null}}async function R(e){typeof EdgeRuntime=="undefined"&&await e.arrayBuffer()}function A(e){let t=e.startsWith("https://edge-config.vercel.com/"),i=t?O(e):null;if(t&&i)return{type:"vercel",baseUrl:`https://edge-config.vercel.com/${i.id}`,id:i.id,version:"1",token:i.token};try{let s=new URL(e),d=s.searchParams.get("id"),r=s.searchParams.get("token"),o=s.searchParams.get("version")||"1";(!d||s.pathname.startsWith("/ecfg_"))&&(d=s.pathname.split("/")[1]||null);for(let n of s.searchParams.keys())s.searchParams.delete(n);return!d||!r?null:{type:"external",baseUrl:s.toString(),id:d,token:r,version:o}}catch (e4){return null}}function D(e){if(!e)throw new Error("@vercel/edge-config: No connection string provided");let t=A(e);if(!t)throw new Error("@vercel/edge-config: Invalid connection string provided");let i=t.baseUrl,s=t.version,d={Authorization:`Bearer ${t.token}`};return{async get(r){let o=await E(t);return o?(u(r),Promise.resolve(h(o.items[r]))):(u(r),p(`${i}/item/${r}?version=${s}`,{headers:new Headers(d),cache:"no-store"}).then(async n=>{if(n.ok)return n.json();if(await R(n),n.status===401)throw new Error(c.UNAUTHORIZED);if(n.status===404){if(n.headers.has("x-edge-config-digest"))return;throw new Error(c.EDGE_CONFIG_NOT_FOUND)}if(n.cachedResponseBody!==void 0)return n.cachedResponseBody;throw new Error(c.UNEXPECTED)},n=>{throw l(n)?n:new Error(c.NETWORK)}))},async has(r){let o=await E(t);return o?(u(r),Promise.resolve(m(o.items,r))):(u(r),fetch(`${i}/item/${r}?version=${s}`,{method:"HEAD",headers:new Headers(d),cache:"no-store"}).then(n=>{if(n.status===401)throw new Error(c.UNAUTHORIZED);if(n.status===404){if(n.headers.has("x-edge-config-digest"))return!1;throw new Error(c.EDGE_CONFIG_NOT_FOUND)}if(n.ok)return!0;throw new Error(c.UNEXPECTED)},n=>{throw l(n)?n:new Error(c.NETWORK)}))},async getAll(r){let o=await E(t);if(o)return r===void 0?Promise.resolve(h(o.items)):(C(r),Promise.resolve(h(v(o.items,r))));Array.isArray(r)&&C(r);let n=Array.isArray(r)?new URLSearchParams(r.map(a=>["key",a])).toString():null;return n===""?Promise.resolve({}):p(`${i}/items?version=${s}${n===null?"":`&${n}`}`,{headers:new Headers(d),cache:"no-store"}).then(async a=>{if(a.ok)return a.json();if(await R(a),a.status===401)throw new Error(c.UNAUTHORIZED);if(a.status===404)throw new Error(c.EDGE_CONFIG_NOT_FOUND);if(a.cachedResponseBody!==void 0)return a.cachedResponseBody;throw new Error(c.UNEXPECTED)},a=>{throw l(a)?a:new Error(c.NETWORK)})},async digest(){let r=await E(t);return r?Promise.resolve(r.digest):p(`${i}/digest?version=${s}`,{headers:new Headers(d),cache:"no-store"}).then(async o=>{if(o.ok)return o.json();if(await R(o),o.cachedResponseBody!==void 0)return o.cachedResponseBody;throw new Error(c.UNEXPECTED)},o=>{throw l(o)?o:new Error(c.NETWORK)})}}}var f;function w(){f||(f=D(process.env.EDGE_CONFIG))}var K=(...e)=>(w(),f.get(...e)),S= exports.getAll =(...e)=>(w(),f.getAll(...e)),F= exports.has =(...e)=>(w(),f.has(...e)),H= exports.digest =(...e)=>(w(),f.digest(...e));exports.createClient = D; exports.digest = H; exports.get = K; exports.getAll = S; exports.has = F; exports.parseConnectionString = O;
